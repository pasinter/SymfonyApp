imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:
        save_path: "%kernel.root_dir%/sessions/"
        cookie_lifetime: 1800
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        sass:
            sass: %sass_exe%
            apply_to: "\.sass$"
        scss:
            #sass: /usr/local/bin/sass
            sass: %sass_exe%
            apply_to: "\.scss$"    
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        yui_css:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }



sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:



knp_menu:
    twig:  # use "twig: false" to disable the Twig extension and the TwigRenderer
        template: knp_menu.html.twig
    templating: false # if true, enables the helper for PHP templates
    default_renderer: twig # The renderer to use, list is also available by default
    providers:
        builder_alias: true    # disable the builder-based provider
        container_aware: true   # keep this one enabled. Can be omitted as it is the default


mopa_bootstrap:

    form: 
        # removes (optional) in labels of non-required fields
        render_optional_text: false
        #templating:           PasinterAngularJSBundle:Form:fields.html.twig
    menu: ~  # enables twig helpers for menu
    initializr:
        meta:
            title:        "MetaCloud"
            description:  "MetaCloud"
            keywords:     "MetaCloud, clouds"
            author_name:  "MetaCloud"
        dns_prefetch:
              - '//ajax.googleapis.com'
              - '//fonts.googleapis.com'
              - '//netdna.bootstrapcdn.com'
        google:
            wt: 'MXv4fzQSi_m-ILBzqxElZEmi9sIzQdTbLyUAgPw5X2A'
            analytics: 'UA-37751293-1'
        #diagnostic_mode: true



sonata_admin:
    security:
        handler:    sonata.admin.security.handler.noop


liip_imagine:
    resolvers:
       default:
          web_path: ~

    filter_sets:
        cache: ~
        runtime:
            quality: 85
            filters:
                thumbnail: { size: [280], mode: outbound }
        pageHeader:
            quality: 85
            filters:
                thumbnail: { size: [280], mode: outbound }
        cloud_account_logos:
            quality: 85
            filters:
                thumbnail: { size: [50, 50], mode: outbound }



stof_doctrine_extensions:
    orm:
        default:
            softdeleteable: true


lunetics_locale:
  strict_mode: true
  allowed_locales:
    - fr
    - en
  guessing_order:
    - query
    - router
    - session
    - cookie
    - browser
  cookie:
    set_on_change: true
    ttl: 300000

jms_security_extra:
  expressions: true
  
sonata_user:
    security_acl: false
    manager_type: orm # can be orm or mongodb

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Pasinter\CoreBundle\Entity\User
    
    group:
        group_class:   Sonata\UserBundle\Entity\BaseGroup
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)